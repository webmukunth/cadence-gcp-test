nameOverride: "cadence"
fullnameOverride: "cadence"

server:
  image:
    repository: ubercadence/server
    tag: 0.8.6
    pullPolicy: IfNotPresent
  # Global default settings (can be overridden per service)
  replicaCount: 1
  metrics:
    # Annotate pods directly with Prometheus annotations.
    # Use this if you installed Prometheus from a Helm chart.
    annotations:
      enabled: true
    # Enable Prometheus ServiceMonitor
    # Use this if you installed the Prometheus Operator (https://github.com/coreos/prometheus-operator).
    serviceMonitor:
      enabled: false
      interval: 30s
    prometheus:
      timerType: histogram
  podAnnotations: {}
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#limits:
#cpu: 1
#memory: 512Mi
#requests:
#cpu: 500m
#memory: 256Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

  config:
    logLevel: "info"

    # IMPORTANT: This value cannot be changed, once it's set.
    numHistoryShards: 512

    persistence:
      default:
        driver: "sql"

        cassandra:
          hosts: cassandra-db
          port: 9042
          keyspace: cadence
          user: "cassandra"
          password: "cassandra"
          existingSecret: ""
          consistency: Quorum
          maxQPS: 5000
          # datacenter: "us-east-1a"
          # maxConns: 2

        sql:
          driver: "mysql" # mysql
          host: "mysql-db"
          port: 3306
          database: cadence
          user: "cadence"
          password: "cadence"
          existingSecret: ""
          maxConns: 100
          maxIdleConns: 10
          maxConnLifetime: "1h"
          maxQPS: 100000
          # connectAttributes:
            # tx_isolation: "READ-COMMITTED"

      visibility:
        driver: "sql" # cassandra or sql

        cassandra:
          hosts: cassandra-db
          port: 9042
          keyspace: cadence_visibility
          user: "cassandra"
          password: "cassandra"
          existingSecret: ""
          consistency: Quorum
          maxQPS: 100000
          # datacenter: "us-east-1a"
          # maxConns: 2

        sql:
          driver: "mysql" # mysql
          host: "mysql-db"
          port: 3306
          database: cadence_visibility
          user: "cadence_visibility"
          password: "cadence_visibility"
          existingSecret: ""
          maxConns: 20
          maxIdleConns: 20
          maxConnLifetime: "1h"
          maxQPS: 100000
          # connectAttributes:
            # tx_isolation: "READ-COMMITTED"

  frontend:
    replicaCount: 2
    service:
      type: ClusterIP
      port: 7933
    metrics:
      annotations:
        enabled: true
      serviceMonitor: {}
        # enabled: false
      prometheus:
        timerType: histogram
    podAnnotations: {}
    resources: {}
    nodeSelector: {}
    tolerations: []
    affinity: {}

  history:
    replicaCount: 4
    service:
      # type: ClusterIP
      port: 7934
    metrics:
      annotations:
        enabled: true
      serviceMonitor: {}
        # enabled: false
      prometheus:
        timerType: histogram
    podAnnotations: {}
    resources: {}
    nodeSelector: {}
    tolerations: []
    affinity: {}

  matching:
    replicaCount: 4
    service:
      # type: ClusterIP
      port: 7935
    metrics:
      annotations:
        enabled: false
      serviceMonitor: {}
        # enabled: false
      prometheus:
        timerType: histogram
    podAnnotations: {}
    resources: {}
    nodeSelector: {}
    tolerations: []
    affinity: {}

  worker:
    # replicaCount: 1
    service:
      # type: ClusterIP
      port: 7939
    metrics:
      annotations:
        enabled: false
      serviceMonitor: {}
        # enabled: false
      prometheus:
        timerType: histogram
    podAnnotations: {}
    resources: {}
    nodeSelector: {}
    tolerations: []
    affinity: {}

web:
  enabled: true

  replicaCount: 1

  image:
    repository: ubercadence/web
    tag: 3.4.1
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 80
    annotations: {}
    # loadBalancerIP:

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: traefik
      # ingress.kubernetes.io/ssl-redirect: "false"
      # traefik.frontend.rule.type: PathPrefix
    hosts:
      - cadence.gke
    #tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#limits:
#cpu: 500m
#memory: 512Mi
#requests:
#cpu: 250m
#memory: 256Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

schema:
  setup: true
  update: true

cassandra:
  seeds: cassandra-db
  consistency: Quorum
  user: cassandra
  password: cassandra
  enabled: false
  image:
    repo: cassandra
    tag: 3.11.3
    pullPolicy: IfNotPresent
  config:
    cluster_size: 1
    ports:
      cql: 9042

mysql:
  enabled: false
  imageTag: "5.7.26"
  service:
    port: 3306
  mysqlUser: cadence
  initializationFiles:
    user.sql: |-
      GRANT ALL PRIVILEGES ON *.* TO 'cadence'@'%';

dynamicconfig: |-
  frontend.rps:
    - value: 1000000
  frontend.persistenceMaxQPS:
    - value: 1000000
  frontend.domainrps:
    - value: 1000000
      constraints:
        domainName: "cadence"
    - value: 1000000
      constraints:
        domainName: "cadence-system"
  matching.rps:
    - value: 1000000
  matching.persistenceMaxQPS:
    - value: 1000000
  history.rps:
    - value: 1000000
  history.persistenceMaxQPS:
    - value: 1000000

dynamicconfig.disabled: |-
  matching.throttledLogRPS:
    - value: 10000
  matching.maxTaskBatchSize:
    - value: 100
      constraints:
        domainName: "cadence"
        taskListName: "cadence.samplepayment"
        taskType: 0
    - value: 100
      constraints:
        domainName: "cadence"
        taskListName: "cadence.accounting"
        taskType: 1
    - value: 100
      constraints:
        domainName: "cadence"
        taskListName: "cadence.clearing"
        taskType: 1
    - value: 100
      constraints:
        domainName: "cadence"
        taskListName: "cadence.clientresponse"
        taskType: 1
    - value: 100
      constraints:
        domainName: "cadence"
        taskListName: "cadence.enrich"
        taskType: 1
    - value: 100
      constraints:
        domainName: "cadence"
        taskListName: "cadence.fraud"
        taskType: 1
    - value: 100
      constraints:
        domainName: "cadence"
        taskListName: "cadence.limitcheck"
        taskType: 1
    - value: 100
      constraints:
        domainName: "cadence"
        taskListName: "cadence.validate"
        taskType: 1
  matching.maxTaskDeleteBatchSize:
    - value: 100
      constraints:
        domainName: "cadence"
        taskListName: "cadence.samplepayment"
        taskType: 0
    - value: 100
      constraints:
        domainName: "cadence"
        taskListName: "cadence.accounting"
        taskType: 1
    - value: 100
      constraints:
        domainName: "cadence"
        taskListName: "cadence.clearing"
        taskType: 1
    - value: 100
      constraints:
        domainName: "cadence"
        taskListName: "cadence.clientresponse"
        taskType: 1
    - value: 100
      constraints:
        domainName: "cadence"
        taskListName: "cadence.enrich"
        taskType: 1
    - value: 100
      constraints:
        domainName: "cadence"
        taskListName: "cadence.fraud"
        taskType: 1
    - value: 100
      constraints:
        domainName: "cadence"
        taskListName: "cadence.limitcheck"
        taskType: 1
    - value: 100
      constraints:
        domainName: "cadence"
        taskListName: "cadence.validate"
        taskType: 1
  history.timerProcessorMaxPollInterval:
    - value: 2s
  history.transferProcessorMaxPollInterval:
    - value: 2s
  history.transferProcessorUpdateAckInterval:
    - value: 2s
  history.transferProcessorCompleteTransferInterval:
    - value: 2s
  history.timerProcessorUpdateAckInterval:
    - value: 2s
  history.timerProcessorCompleteTimerInterval:
    - value: 2s
  matching.maxTasklistIdleTime:
    - value: 2s
      constraints:
        domainName: "cadence"
        taskListName: "cadence.samplepayment"
        taskType: 0
    - value: 2s
      constraints:
        domainName: "cadence"
        taskListName: "cadence.accounting"
        taskType: 1
    - value: 2s
      constraints:
        domainName: "cadence"
        taskListName: "cadence.clearing"
        taskType: 1
    - value: 2s
      constraints:
        domainName: "cadence"
        taskListName: "cadence.clientresponse"
        taskType: 1
    - value: 2s
      constraints:
        domainName: "cadence"
        taskListName: "cadence.enrich"
        taskType: 1
    - value: 2s
      constraints:
        domainName: "cadence"
        taskListName: "cadence.fraud"
        taskType: 1
    - value: 2s
      constraints:
        domainName: "cadence"
        taskListName: "cadence.limitcheck"
        taskType: 1
    - value: 2s
      constraints:
        domainName: "cadence"
        taskListName: "cadence.validate"
        taskType: 1

  matching.updateAckInterval:
    - value: 2s
      constraints:
        domainName: "cadence"
        taskListName: "cadence.samplepayment"
        taskType: 0
    - value: 2s
      constraints:
        domainName: "cadence"
        taskListName: "cadence.accounting"
        taskType: 1
    - value: 2s
      constraints:
        domainName: "cadence"
        taskListName: "cadence.clearing"
        taskType: 1
    - value: 2s
      constraints:
        domainName: "cadence"
        taskListName: "cadence.clientresponse"
        taskType: 1
    - value: 2s
      constraints:
        domainName: "cadence"
        taskListName: "cadence.enrich"
        taskType: 1
    - value: 2s
      constraints:
        domainName: "cadence"
        taskListName: "cadence.fraud"
        taskType: 1
    - value: 2s
      constraints:
        domainName: "cadence"
        taskListName: "cadence.limitcheck"
        taskType: 1
    - value: 2s
      constraints:
        domainName: "cadence"
        taskListName: "cadence.validate"
        taskType: 1
  frontend.throttledLogRPS:
    - value: 10000
  history.cacheMaxSize:
    - value: 16384
  history.cacheTTL:
    - value: 5m
  history.eventsCacheMaxSize:
    - value: 16384
  history.eventsCacheTTL:
    - value: 5m
  history.timerTaskBatchSize:
    - value: 100
  history.timerWorkerCount:
    - value: 100
  history.timerProcessorMaxPollRPS:
    - value: 100
  history.transferTaskBatchSize:
    - value: 100
  history.transferProcessorMaxPollRPS:
    - value: 100
  history.transferTaskWorkerCount:
    - value: 100
  history.throttledLogRPS:
    - value: 10000
  frontend.historyMaxConns:
    - value: 20
